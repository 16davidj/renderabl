"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = __importDefault(require("react"));
const PersonCard = ({ name, summary, birthday, death, age, occupation_best_known_for_five_or_less_words, alma_mater, hometown, spouses, awards, profilePictureUrl, }) => {
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "max-w-md mx-auto bg-white shadow-lg rounded-lg overflow-hidden border border-gray-200" }, { children: [profilePictureUrl && ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: "w-full h-64 bg-gray-100 overflow-hidden" }, { children: (0, jsx_runtime_1.jsx)("img", { src: profilePictureUrl, alt: `${name} profile`, className: "w-full h-full object-cover" }) }))), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "bg-gray-100 p-4 text-center" }, { children: [(0, jsx_runtime_1.jsx)("h2", Object.assign({ className: "text-2xl font-semibold" }, { children: name })), (0, jsx_runtime_1.jsx)("p", Object.assign({ className: "text-sm text-gray-600 italic" }, { children: occupation_best_known_for_five_or_less_words }))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "p-4" }, { children: [(0, jsx_runtime_1.jsx)("p", Object.assign({ className: "text-sm text-gray-700 mb-2" }, { children: summary })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "grid grid-cols-2 gap-4 text-sm text-gray-600" }, { children: [(0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("p", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Born:" }), " ", birthday] }), (0, jsx_runtime_1.jsxs)("p", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Died:" }), " ", death] }), (0, jsx_runtime_1.jsxs)("p", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Age:" }), " ", age, " years"] })] }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("p", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Hometown:" }), " ", hometown] }), (0, jsx_runtime_1.jsxs)("p", { children: [(0, jsx_runtime_1.jsx)("strong", { children: "Alma Mater:" }), " ", alma_mater] })] })] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "mt-4" }, { children: [(0, jsx_runtime_1.jsx)("p", Object.assign({ className: "text-sm font-semibold" }, { children: "Spouses:" })), (0, jsx_runtime_1.jsx)("ul", Object.assign({ className: "list-disc list-inside text-sm text-gray-700" }, { children: spouses.map((spouse, index) => ((0, jsx_runtime_1.jsx)("li", { children: spouse }, index))) }))] })), (0, jsx_runtime_1.jsxs)("div", Object.assign({ className: "mt-4" }, { children: [(0, jsx_runtime_1.jsx)("p", Object.assign({ className: "text-sm font-semibold" }, { children: "Awards:" })), (0, jsx_runtime_1.jsx)("ul", Object.assign({ className: "list-disc list-inside text-sm text-gray-700" }, { children: awards.map((award, index) => ((0, jsx_runtime_1.jsx)("li", { children: award }, index))) }))] }))] }))] })));
};
exports.default = PersonCard;
//# sourceMappingURL=personcard.js.map